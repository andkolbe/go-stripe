{{define "stripe-js"}}

<script src="https://js.stripe.com/v3/"></script>

<script>
    let card;
    let stripe;
    const cardMessages = document.getElementById("card-messages")
    const payButton = document.getElementById("pay-button")
    const processing = document.getElementById("processing-payment")

    stripe = Stripe({{.StripePublishableKey}})

    function hidePayButton() {
        // make sure the user can't click on the pay button twice
        payButton.classList.add("d-none");
        // show processing spinner
        processing.classList.remove("d-none")
    }

    function showPayButtons() {
        payButton.classList.remove("d-none");
        processing.classList.add("d-none")
    }

    function showCardError(msg) {
        cardMessages.classList.add("alert-danger")
        cardMessages.classList.remove("alert-success")
        cardMessages.classList.remove("d-none")
        cardMessages.innerText = msg;
    }

    function showCardSuccess() {
        cardMessages.classList.remove("alert-danger")
        cardMessages.classList.add("alert-success")
        cardMessages.classList.remove("d-none")
        cardMessages.innerText = "Transaction Successful";
    }

    function val() {
        let form = document.getElementById("charge_form");
        if (form.checkValidity() == false) {
            this.event.preventDefault();
            this.event.stopPropagation();
            form.classList.add("was-validated")
            return;
        }
        form.classList.add("was-validated")
        hidePayButton();

        // this need to be a string to send to the back end
        let amountToCharge = String(parseFloat(document.getElementById("amount").value) * 100)
        // the payload to send to the server
        let payload = {
            amount: amountToCharge,
            currency: 'usd', 
        }

        const requestOptions = {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(payload),
        }

        fetch("{{.API}}/api/payment-intent", requestOptions)
            // convert the response to text so we know that the response is valid json
            .then(response => response.text())
            .then(response => {
                let data;
                try {
                    data = JSON.parse(response);
                    stripe.confirmCardPayment(data.client_secret, {
                        payment_method: {
                            card: card,
                            billing_details: {
                                name: document.getElementById("cardholder-name").value,
                            }
                        }
                    }).then(function(result) {
                        if (result.error) {
                            // in most cases, card declined
                            showCardError(result.error.message)
                            showPayButtons();
                        } else if (result.paymentIntent) {
                            if (result.paymentIntent.status === "succeeded") {
                                // we have charged the card
                                // populate the hidden fields with information
                                document.getElementById("payment_method").value = result.paymentIntent.payment_method_types[0];
                                document.getElementById("payment_intent").value = result.paymentIntent.id;
                                document.getElementById("payment_amount").value = result.paymentIntent.amount;
                                document.getElementById("payment_currency").value = result.paymentIntent.currency;
                                processing.classList.add("d-none")
                                showCardSuccess();
                                document.getElementById("charge_form").submit();
                            }
                        }
                    })
                } catch (err) {
                    console.log(err)
                    showCardError("invalid response from payment gateway")
                    showPayButtons();
                }
            })
    }

    (function() {
        // create stripe & elements
        const elements = stripe.elements();
        const style = {
            base: {
                fontSize: '16px',
                lineHeight: '24px'
            }
        };


        // create card entry
        card = elements.create('card', {
            style: style,
            hidePostalCode: true,
        });
        card.mount("#card-element")

        // check for input errors
        card.addEventListener('change', function(event) {
            var displayError = document.getElementById("card-errors");
            if (event.error) {
                displayError.classList.remove('d-none')
                displayError.textContent = event.error.message;
            } else {
                displayError.classList.add('d-none')
                displayError.textContent = '';
            }
        })
    })()
</script>

{{end}}